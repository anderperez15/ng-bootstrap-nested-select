{"version":3,"file":"ng-bootstrap-nested-select.js","sources":["ng://ng-bootstrap-nested-select/lib/ng-bootstrap-nested-select.component.ts","ng://ng-bootstrap-nested-select/lib/ng-bootstrap-nested-select.module.ts","ng://ng-bootstrap-nested-select/public-api.ts","ng://ng-bootstrap-nested-select/ng-bootstrap-nested-select.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport {NgbDropdown, NgbDropdownConfig} from '@ng-bootstrap/ng-bootstrap';\nimport * as similarity from 'string-similarity';\n\nexport enum KEY_CODE {\n  ENTER = 13,\n  UP_ARROW = 38,\n  DOWN_ARROW = 40\n}\n\nexport interface NgBootstrapNestedSelectAction {\n  id: any;\n  label: string;\n}\n\nexport interface NgBootstrapNestedSelectSettings {\n  filter: { fields: any[] };\n  field: string;\n  scroll: boolean;\n  top: boolean;\n  selectAll: boolean;\n  label: string;\n  collapsed: boolean;\n  clear: boolean|string;\n  strict: boolean;\n  actions: string;\n  required: boolean;\n  indexedOptions: boolean;\n  numberInput: boolean;\n  matchRating: number;\n  emptyText: string;\n  popoverTitle: boolean|string;\n}\n\nexport class NgBootstrapNestedSelectDefaultSetting implements NgBootstrapNestedSelectSettings {\n  filter = { fields: ['name'] };\n  field = 'options';\n  scroll = true;\n  top = false;\n  selectAll = false;\n  label = 'name';\n  collapsed = false;\n  clear = 'Clear';\n  strict = true;\n  actions = null;\n  required = false;\n  indexedOptions = false;\n  numberInput = false;\n  matchRating = .4;\n  emptyText = 'No Options Available';\n  popoverTitle = 'Details:';\n}\n\n@Component({\n  selector: 'nested-select',\n  templateUrl: './ng-bootstrap-nested-select.component.html',\n  styleUrls: ['./ng-bootstrap-nested-select.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgBootstrapNestedSelectComponent implements OnInit {\n  @HostBinding('class.disabled') disable = false;\n  @HostBinding('class.required') required = false;\n  @HostBinding('class.invalid') invalid = true;\n  @ViewChild('filterInput', {static: false}) private filterInputRef: ElementRef;\n  @ViewChild('nestedDrop', {static: false}) private nestedDropRef: NgbDropdown;\n\n  // Local list of options\n  _options: any[] = [];\n\n  // List of options to display in the dropdown\n  @Input() set options(options) {\n    this.setOptions(options);\n    // resetSelected needs to wait for the settings var to populate, so use setTimeout to delay execution.\n    setTimeout(() => {\n      this.resetSelected(this._options);\n    }, 500);\n  }\n\n  // Default option to be set\n  @Input() set default(defautOption) {\n    if(typeof defautOption === 'object') {\n      this._selected = {...defautOption};\n    } else {\n      this._selected = {\n        name: defautOption,\n        selected: true\n      };\n    }\n    if(defautOption) this.filterOn = false;\n    this.validate();\n  }\n\n  // Settings to control component\n  @Input() settings: NgBootstrapNestedSelectSettings = new NgBootstrapNestedSelectDefaultSetting();\n  _disabled: boolean = false;\n\n  // Disabled the select box\n  @Input() set disabled(bool) {\n    if(bool) this.disable = true;\n    else this.disable = false;\n    this._disabled = bool;\n  }\n\n\n  // Select Expand of list\n  @Input() selectExpand:boolean = false;\n\n\n  // Array of action buttons/links to add to select box\n  @Input() actions: NgBootstrapNestedSelectAction[] = [];\n\n  // Emit selected value when selected\n  @Output() selected: EventEmitter<any> = new EventEmitter();\n\n  // Emit action value when action is selected\n  @Output() actionSelected: EventEmitter<any> = new EventEmitter();\n\n  // Array of filted options\n  _optionsFiltered: any[] = [];\n\n  // The filter string to search through options\n  _searchTerm: string = '';\n\n  // The selected option\n  _selected: any = {};\n\n  public filterOn: boolean = true;\n\n  constructor(\n    private cb: ChangeDetectorRef,\n    private ngbConfig: NgbDropdownConfig\n  ) {\n    this.ngbConfig.autoClose = 'outside';\n  }\n\n  /**\n   * Init the default settings if they aren't provided in the settings object\n   */\n  ngOnInit() {\n    let defaultSettings = new NgBootstrapNestedSelectDefaultSetting();\n    for(let key in defaultSettings) {\n      if(!this.settings[key] && this.settings[key] !== false) this.settings[key] = defaultSettings[key];\n    }\n\n    // Add 'required' class\n    if(this.settings.required) {\n      this.required = true;\n      this.validate();\n    }\n\n    this.cb.markForCheck();\n  }\n\n  /**\n   * Handle a keyboard event when toggle through the options list\n   * @param {KeyboardEvent} event\n   */\n  @HostListener('window:keyup', ['$event'])\n  keyEvent(event: KeyboardEvent) {\n    switch(event.keyCode) {\n      case KEY_CODE.UP_ARROW:\n      case KEY_CODE.DOWN_ARROW:\n        this.arrowOption(event.keyCode);\n        break;\n      case KEY_CODE.ENTER:\n        this.selectOption(null, this._selected);\n        break;\n    }\n  }\n\n  /**\n   * Check if we have any options to select from\n   * @returns {boolean}\n   */\n  hasOptions() {\n    return this._options.filter((op) => {\n      if(op[this.settings.label] && op[this.settings.label] !== '') return true;\n    }).length > 0;\n  }\n\n  /**\n   * Resursively reset the \"selected\" flag for every option\n   * @param options\n   */\n  resetSelected(options: any[] = []) {\n    options.forEach(opt => {\n      opt.selected = false;\n      opt.collapsed = false;\n      // Check if this options has child options\n      if(this.settings && opt[this.settings.field] && opt[this.settings.field].length > 0) {\n        this.resetSelected(opt[this.settings.field]);\n      }\n    });\n  }\n\n  /**\n   * Select a value from the options and emit output\n   * @param {MouseEvent|null} event\n   * @param {any=null} option\n   * @param {boolean=false} toggle\n   */\n  selectOption(event: (MouseEvent|null), option: any = null, toggle: boolean = false, selectWithOptions = false) {\n    //console.log(selectWithOptions)\n    if(!option) {\n      option = {selected: true};\n      option[this.settings.label] = event;\n    }\n\n    if(toggle || (option[this.settings.field] && option[this.settings.field].length && !this.settings.selectAll && !selectWithOptions)) {\n      option.selected = !option.selected;\n      event.stopPropagation();\n      event.preventDefault();\n    } else {\n      this._selected = {...option};\n      this._searchTerm = this._selected[this.settings.label];\n\n      if(this.settings.indexedOptions) this.selected.emit(option[this.settings.label]);\n      else this.selected.emit(option);\n\n      if(!this.settings.selectAll) this.filterOn = false;\n      this.nestedDropRef.close();\n    }\n\n    this.validate();\n\n    this.cb.detectChanges();\n  }\n\n  selecWithOptions(event: (MouseEvent|null), option: any = null){\n    this.selectOption(event,option, false,this.selectExpand)\n  }\n  /**\n   * Check if we have a value selected\n   */\n  validate() {\n    if(Object.keys(this._selected).length > 0) this.invalid = false;\n    else this.invalid = true;\n  }\n\n  /**\n   * Resursive filter the list of options based on the kyeboard input\n   * @param {string} searchTerm - The text to search for\n   * @param {any[]} options - The options array to search through\n   * @returns {number} found - value is > 1 if match is found, < 0 if no match\n   */\n  filterOptions(searchTerm: string = null, options: any[] = []) {\n    this.nestedDropRef.open();\n    if(this._searchTerm.length === 0) return;\n\n    if(!searchTerm) {\n      this._optionsFiltered = [];\n      if(!this._searchTerm) this._optionsFiltered = this._options.slice(0);\n      searchTerm = this._searchTerm;\n      options = this._options.slice(0);\n    }\n\n    let found = -1;\n    options.forEach((opt, index) => {\n      this.settings.filter.fields.forEach(field => {\n        let optTerm = opt[field];\n        found = optTerm.search(new RegExp(searchTerm, 'i'));\n        let similar = similarity.compareTwoStrings(optTerm, searchTerm);\n        if((found >= 0 || similar >= this.settings.matchRating) && this._optionsFiltered.indexOf(opt) < 0) {\n          opt.match = similar;\n          this._optionsFiltered.push(opt);\n        }\n      });\n\n      if(opt[this.settings.field] && opt[this.settings.field].length) {\n        found = this.filterOptions(searchTerm, opt[this.settings.field]);\n      }\n    });\n    this._optionsFiltered.sort((a, b) => {\n      return b.match - a.match;\n    });\n    return found;\n  }\n\n  /**\n   * Change the selected value based on if the up/down arrow key is typed\n   * @param {number} direction - The keycode of the key selected\n   */\n  arrowOption(direction: number) {\n    this.filterOn = false;\n    if(!this._selected) this._selected = this._optionsFiltered[0];\n    else {\n      // Do for loop so that we can break out of it.\n      for(let index = 0; index < this._optionsFiltered.length; index++) {\n        let opt = this._optionsFiltered[index];\n        let moveSelected = 1;\n        if(direction === KEY_CODE.UP_ARROW) moveSelected = -1;\n        if(opt === this._selected && this._optionsFiltered[(index + moveSelected)]) {\n          this._selected = this._optionsFiltered[(index + moveSelected)];\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Emit the action selected to the parent component\n   * @param action\n   */\n  selectAction(action: NgBootstrapNestedSelectAction) {\n    this.actionSelected.emit(action);\n  }\n\n  /**\n   * Display the keyboard input filter\n   */\n  showFilter() {\n    this._optionsFiltered = this._options.slice(0);\n    this.filterOn = true;\n    this._searchTerm = '';\n    setTimeout(() => {\n      this.filterInputRef.nativeElement.focus();\n      this.nestedDropRef.open();\n    }, 100);\n  }\n\n  /**\n   * Hide the keyboard input filter\n   */\n  hideFilter() {\n    this.filterOn = false;\n  }\n\n  /**\n   * Set the local this._options array\n   * @param {array} options - Array of objects or values.\n   */\n  setOptions(options: Array<any>) {\n    this._options = [];\n    options.forEach(opt => {\n      if(typeof opt === 'object') { // \"options\" is an array of objects\n        let objCopy = {...opt};\n        objCopy.selected = false;\n        this._options.push(objCopy);\n      } else { // \"options\" is an array of values\n        this._options.push({\n          name: opt,\n          selected: false\n        });\n      }\n      this._optionsFiltered = this._options.slice(0);\n    });\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {NgbDropdownModule, NgbPopoverModule} from '@ng-bootstrap/ng-bootstrap';\nimport {NgBootstrapNestedSelectComponent} from './ng-bootstrap-nested-select.component';\n\n@NgModule({\n  declarations: [NgBootstrapNestedSelectComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgbPopoverModule,\n    NgbDropdownModule,\n    NgbPopoverModule\n  ],\n  exports: [NgBootstrapNestedSelectComponent]\n})\nexport class NgBootstrapNestedSelectModule { }\n","/*\n * Public API Surface of ng-bootstrap-nested-select\n */\n\nexport * from './lib/ng-bootstrap-nested-select.component';\nexport * from './lib/ng-bootstrap-nested-select.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["similarity.compareTwoStrings","tslib_1.__decorate"],"mappings":"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"}