{"version":3,"file":"ng-bootstrap-nested-select.umd.js","sources":["ng://ng-bootstrap-nested-select/lib/ng-bootstrap-nested-select.component.ts","ng://ng-bootstrap-nested-select/lib/ng-bootstrap-nested-select.module.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport {NgbDropdown, NgbDropdownConfig} from '@ng-bootstrap/ng-bootstrap';\nimport * as similarity from 'string-similarity';\n\nexport enum KEY_CODE {\n  ENTER = 13,\n  UP_ARROW = 38,\n  DOWN_ARROW = 40\n}\n\nexport interface NgBootstrapNestedSelectAction {\n  id: any;\n  label: string;\n}\n\nexport interface NgBootstrapNestedSelectSettings {\n  filter: { fields: any[] };\n  field: string;\n  scroll: boolean;\n  top: boolean;\n  selectAll: boolean;\n  label: string;\n  collapsed: boolean;\n  clear: boolean|string;\n  strict: boolean;\n  actions: string;\n  required: boolean;\n  indexedOptions: boolean;\n  numberInput: boolean;\n  matchRating: number;\n  emptyText: string;\n  popoverTitle: boolean|string;\n}\n\nexport class NgBootstrapNestedSelectDefaultSetting implements NgBootstrapNestedSelectSettings {\n  filter = { fields: ['name'] };\n  field = 'options';\n  scroll = true;\n  top = false;\n  selectAll = false;\n  label = 'name';\n  collapsed = false;\n  clear = 'Clear';\n  strict = true;\n  actions = null;\n  required = false;\n  indexedOptions = false;\n  numberInput = false;\n  matchRating = .4;\n  emptyText = 'No Options Available';\n  popoverTitle = 'Details:';\n}\n\n@Component({\n  selector: 'nested-select',\n  templateUrl: './ng-bootstrap-nested-select.component.html',\n  styleUrls: ['./ng-bootstrap-nested-select.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgBootstrapNestedSelectComponent implements OnInit {\n  @HostBinding('class.disabled') disable = false;\n  @HostBinding('class.required') required = false;\n  @HostBinding('class.invalid') invalid = true;\n  @ViewChild('filterInput', {static: false}) private filterInputRef: ElementRef;\n  @ViewChild('nestedDrop', {static: false}) private nestedDropRef: NgbDropdown;\n\n  // Local list of options\n  _options: any[] = [];\n\n  // List of options to display in the dropdown\n  @Input() set options(options) {\n    this.setOptions(options);\n    // resetSelected needs to wait for the settings var to populate, so use setTimeout to delay execution.\n    setTimeout(() => {\n      this.resetSelected(this._options);\n    }, 500);\n  }\n\n  // Default option to be set\n  @Input() set default(defautOption) {\n    if(typeof defautOption === 'object') {\n      this._selected = {...defautOption};\n    } else {\n      this._selected = {\n        name: defautOption,\n        selected: true\n      };\n    }\n    if(defautOption) this.filterOn = false;\n    this.validate();\n  }\n\n  // Settings to control component\n  @Input() settings: NgBootstrapNestedSelectSettings = new NgBootstrapNestedSelectDefaultSetting();\n  _disabled: boolean = false;\n\n  // Disabled the select box\n  @Input() set disabled(bool) {\n    if(bool) this.disable = true;\n    else this.disable = false;\n    this._disabled = bool;\n  }\n\n\n  // Select Expand of list\n  @Input() selectExpand:boolean = false;\n\n\n  // Array of action buttons/links to add to select box\n  @Input() actions: NgBootstrapNestedSelectAction[] = [];\n\n  // Emit selected value when selected\n  @Output() selected: EventEmitter<any> = new EventEmitter();\n\n  // Emit action value when action is selected\n  @Output() actionSelected: EventEmitter<any> = new EventEmitter();\n\n  // Array of filted options\n  _optionsFiltered: any[] = [];\n\n  // The filter string to search through options\n  _searchTerm: string = '';\n\n  // The selected option\n  _selected: any = {};\n\n  public filterOn: boolean = true;\n\n  constructor(\n    private cb: ChangeDetectorRef,\n    private ngbConfig: NgbDropdownConfig\n  ) {\n    this.ngbConfig.autoClose = 'outside';\n  }\n\n  /**\n   * Init the default settings if they aren't provided in the settings object\n   */\n  ngOnInit() {\n    let defaultSettings = new NgBootstrapNestedSelectDefaultSetting();\n    for(let key in defaultSettings) {\n      if(!this.settings[key] && this.settings[key] !== false) this.settings[key] = defaultSettings[key];\n    }\n\n    // Add 'required' class\n    if(this.settings.required) {\n      this.required = true;\n      this.validate();\n    }\n\n    this.cb.markForCheck();\n  }\n\n  /**\n   * Handle a keyboard event when toggle through the options list\n   * @param {KeyboardEvent} event\n   */\n  @HostListener('window:keyup', ['$event'])\n  keyEvent(event: KeyboardEvent) {\n    switch(event.keyCode) {\n      case KEY_CODE.UP_ARROW:\n      case KEY_CODE.DOWN_ARROW:\n        this.arrowOption(event.keyCode);\n        break;\n      case KEY_CODE.ENTER:\n        this.selectOption(null, this._selected);\n        break;\n    }\n  }\n\n  /**\n   * Check if we have any options to select from\n   * @returns {boolean}\n   */\n  hasOptions() {\n    return this._options.filter((op) => {\n      if(op[this.settings.label] && op[this.settings.label] !== '') return true;\n    }).length > 0;\n  }\n\n  /**\n   * Resursively reset the \"selected\" flag for every option\n   * @param options\n   */\n  resetSelected(options: any[] = []) {\n    options.forEach(opt => {\n      opt.selected = false;\n      opt.collapsed = false;\n      // Check if this options has child options\n      if(this.settings && opt[this.settings.field] && opt[this.settings.field].length > 0) {\n        this.resetSelected(opt[this.settings.field]);\n      }\n    });\n  }\n\n  /**\n   * Select a value from the options and emit output\n   * @param {MouseEvent|null} event\n   * @param {any=null} option\n   * @param {boolean=false} toggle\n   */\n  selectOption(event: (MouseEvent|null), option: any = null, toggle: boolean = false, selectWithOptions = false) {\n    //console.log(selectWithOptions)\n    if(!option) {\n      option = {selected: true};\n      option[this.settings.label] = event;\n    }\n\n    if(toggle || (option[this.settings.field] && option[this.settings.field].length && !this.settings.selectAll && !selectWithOptions)) {\n      option.selected = !option.selected;\n      event.stopPropagation();\n      event.preventDefault();\n    } else {\n      this._selected = {...option};\n      this._searchTerm = this._selected[this.settings.label];\n\n      if(this.settings.indexedOptions) this.selected.emit(option[this.settings.label]);\n      else this.selected.emit(option);\n\n      if(!this.settings.selectAll) this.filterOn = false;\n      this.nestedDropRef.close();\n    }\n\n    this.validate();\n\n    this.cb.detectChanges();\n  }\n\n  selecWithOptions(event: (MouseEvent|null), option: any = null){\n    this.selectOption(event,option, false,this.selectExpand)\n  }\n  /**\n   * Check if we have a value selected\n   */\n  validate() {\n    if(Object.keys(this._selected).length > 0) this.invalid = false;\n    else this.invalid = true;\n  }\n\n  /**\n   * Resursive filter the list of options based on the kyeboard input\n   * @param {string} searchTerm - The text to search for\n   * @param {any[]} options - The options array to search through\n   * @returns {number} found - value is > 1 if match is found, < 0 if no match\n   */\n  filterOptions(searchTerm: string = null, options: any[] = []) {\n    this.nestedDropRef.open();\n    if(this._searchTerm.length === 0) return;\n\n    if(!searchTerm) {\n      this._optionsFiltered = [];\n      if(!this._searchTerm) this._optionsFiltered = this._options.slice(0);\n      searchTerm = this._searchTerm;\n      options = this._options.slice(0);\n    }\n\n    let found = -1;\n    options.forEach((opt, index) => {\n      this.settings.filter.fields.forEach(field => {\n        let optTerm = opt[field];\n        found = optTerm.search(new RegExp(searchTerm, 'i'));\n        let similar = similarity.compareTwoStrings(optTerm, searchTerm);\n        if((found >= 0 || similar >= this.settings.matchRating) && this._optionsFiltered.indexOf(opt) < 0) {\n          opt.match = similar;\n          this._optionsFiltered.push(opt);\n        }\n      });\n\n      if(opt[this.settings.field] && opt[this.settings.field].length) {\n        found = this.filterOptions(searchTerm, opt[this.settings.field]);\n      }\n    });\n    this._optionsFiltered.sort((a, b) => {\n      return b.match - a.match;\n    });\n    return found;\n  }\n\n  /**\n   * Change the selected value based on if the up/down arrow key is typed\n   * @param {number} direction - The keycode of the key selected\n   */\n  arrowOption(direction: number) {\n    this.filterOn = false;\n    if(!this._selected) this._selected = this._optionsFiltered[0];\n    else {\n      // Do for loop so that we can break out of it.\n      for(let index = 0; index < this._optionsFiltered.length; index++) {\n        let opt = this._optionsFiltered[index];\n        let moveSelected = 1;\n        if(direction === KEY_CODE.UP_ARROW) moveSelected = -1;\n        if(opt === this._selected && this._optionsFiltered[(index + moveSelected)]) {\n          this._selected = this._optionsFiltered[(index + moveSelected)];\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Emit the action selected to the parent component\n   * @param action\n   */\n  selectAction(action: NgBootstrapNestedSelectAction) {\n    this.actionSelected.emit(action);\n  }\n\n  /**\n   * Display the keyboard input filter\n   */\n  showFilter() {\n    this._optionsFiltered = this._options.slice(0);\n    this.filterOn = true;\n    this._searchTerm = '';\n    setTimeout(() => {\n      this.filterInputRef.nativeElement.focus();\n      this.nestedDropRef.open();\n    }, 100);\n  }\n\n  /**\n   * Hide the keyboard input filter\n   */\n  hideFilter() {\n    this.filterOn = false;\n  }\n\n  /**\n   * Set the local this._options array\n   * @param {array} options - Array of objects or values.\n   */\n  setOptions(options: Array<any>) {\n    this._options = [];\n    options.forEach(opt => {\n      if(typeof opt === 'object') { // \"options\" is an array of objects\n        let objCopy = {...opt};\n        objCopy.selected = false;\n        this._options.push(objCopy);\n      } else { // \"options\" is an array of values\n        this._options.push({\n          name: opt,\n          selected: false\n        });\n      }\n      this._optionsFiltered = this._options.slice(0);\n    });\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {NgbDropdownModule, NgbPopoverModule} from '@ng-bootstrap/ng-bootstrap';\nimport {NgBootstrapNestedSelectComponent} from './ng-bootstrap-nested-select.component';\n\n@NgModule({\n  declarations: [NgBootstrapNestedSelectComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgbPopoverModule,\n    NgbDropdownModule,\n    NgbPopoverModule\n  ],\n  exports: [NgBootstrapNestedSelectComponent]\n})\nexport class NgBootstrapNestedSelectModule { }\n"],"names":["KEY_CODE","EventEmitter","similarity.compareTwoStrings","ChangeDetectorRef","NgbDropdownConfig","tslib_1.__decorate","HostBinding","ViewChild","Input","Output","HostListener","Component","ChangeDetectionStrategy","NgModule","CommonModule","FormsModule","NgbPopoverModule","NgbDropdownModule"],"mappings":"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"}